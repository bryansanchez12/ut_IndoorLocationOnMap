// Generated by view binder compiler. Do not edit!
package com.example.indoormap.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.indoormap.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView FLOOR;

  @NonNull
  public final RelativeLayout layout1;

  @NonNull
  public final RelativeLayout layout2;

  @NonNull
  public final Button searchBeacons;

  @NonNull
  public final TextView textView;

  private ActivityMapsBinding(@NonNull RelativeLayout rootView, @NonNull TextView FLOOR,
      @NonNull RelativeLayout layout1, @NonNull RelativeLayout layout2,
      @NonNull Button searchBeacons, @NonNull TextView textView) {
    this.rootView = rootView;
    this.FLOOR = FLOOR;
    this.layout1 = layout1;
    this.layout2 = layout2;
    this.searchBeacons = searchBeacons;
    this.textView = textView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FLOOR;
      TextView FLOOR = ViewBindings.findChildViewById(rootView, id);
      if (FLOOR == null) {
        break missingId;
      }

      id = R.id.layout1;
      RelativeLayout layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }

      id = R.id.layout2;
      RelativeLayout layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.searchBeacons;
      Button searchBeacons = ViewBindings.findChildViewById(rootView, id);
      if (searchBeacons == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityMapsBinding((RelativeLayout) rootView, FLOOR, layout1, layout2,
          searchBeacons, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
